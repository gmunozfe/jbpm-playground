embed-server --server-config=standalone-full-kie-server.xml

/subsystem=logging/logger=org.jbpm/:add(level=TRACE,use-parent-handlers=true)
/subsystem=logging/console-handler=CONSOLE:write-attribute(name=level, value=TRACE)

# Remove former other security-domain at security subsystem
/subsystem=security/security-domain=other:remove

/subsystem=security:remove

### ELYTRON
/extension=org.wildfly.extension.elytron:add
/subsystem=elytron:add

/subsystem=elytron/provider-loader=elytron/:add(module=org.wildfly.security.elytron)
/subsystem=elytron/provider-loader=openssl/:add(module=org.wildfly.openssl)
/subsystem=elytron/aggregate-providers=combined-providers/:add(providers=[elytron,openssl])

/subsystem=elytron/permission-set=login-permission:add(permissions=[{class-name=org.wildfly.security.auth.permission.LoginPermission}])
/subsystem=elytron/permission-set=default-permissions/:add(permissions=[{class-name=org.wildfly.extension.batch.jberet.deployment.BatchPermission,module=org.wildfly.extension.batch.jberet,target-name=*},{class-name=org.wildfly.transaction.client.RemoteTransactionPermission,module=org.wildfly.transaction.client},{class-name=org.jboss.ejb.client.RemoteEJBPermission,module=org.jboss.ejb-client}])

/subsystem=elytron/simple-permission-mapper=default-permission-mapper:add(permission-mappings=[{principals=["anonymous"]},{match-all=true,permission-sets=[{permission-set=login-permission},{permission-set=default-permissions}]}])

/subsystem=elytron/provider-http-server-mechanism-factory=global/:add

/subsystem=elytron/simple-role-decoder=from-roles-attribute:add(attribute=Roles)


/subsystem=elytron/dir-context=ldap-connection:add(url=ldap://ldap-alias:389, principal="cn=admin,dc=jbpm,dc=org", credential-reference={clear-text=admin})

/subsystem=elytron/ldap-realm="KieLdap":add(dir-context=ldap-connection, \
          direct-verification=true, \
          identity-mapping={search-base-dn="ou=People,dc=jbpm,dc=org", \
          rdn-identifier="uid", \
          attribute-mapping=[{filter-base-dn="ou=Roles,dc=jbpm,dc=org",filter="(uniqueMember=uid={0},ou=People,dc=jbpm,dc=org)",from="cn",to="Roles"}]})

/subsystem=elytron/security-domain=KIEDomain:add(realms=[{realm="KieLdap",role-decoder=from-roles-attribute}], default-realm="KieLdap", permission-mapper=default-permission-mapper)

/subsystem=elytron/http-authentication-factory=ldap-http-auth:add(http-server-mechanism-factory=global,security-domain=KIEDomain,mechanism-configurations=[{mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name="KieLdap"}]}, {mechanism-name=FORM}])

/subsystem=undertow/application-security-domain=other:add(security-domain=KIEDomain)

## EJB3
/subsystem=ejb3/application-security-domain=other:add(security-domain=KIEDomain)

## messaging-activemq
/subsystem=messaging-activemq/server=default:undefine-attribute(name=security-domain)
/subsystem=messaging-activemq/server=default:write-attribute(name=elytron-domain, value=KIEDomain)

 ##### disable jacc from security subsystem and add enable at elytron by adding new policy 
##/subsystem=security:write-attribute(name=initialize-jacc, value=false)
/subsystem=elytron/policy=jacc:add(jacc-policy={})

# Adding postgresql driver as a core module
module add --name=com.postgresql --resources=/etc/drivers/postgresql.jar --dependencies=javax.api,javax.transaction.api

/subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=com.postgresql,\
driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)

xa-data-source add --name=rhpamXADS --jndi-name=java:/rhpamXADS --driver-name=postgresql --user-name=rhpamuser \
--password=rhpampassword --validate-on-match=true --background-validation=false \
--valid-connection-checker-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker \
--exception-sorter-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter \
--xa-datasource-properties={"ServerName"=>"postgresql11","PortNumber"=>"5432","DatabaseName"=>"rhpamdatabase"}

#Configure postgresql as kieserver persistence
/system-property=org.kie.server.persistence.ds:add(value=java:/rhpamXADS)
/system-property=org.kie.server.persistence.dialect:add(value=org.hibernate.dialect.PostgreSQLDialect)

stop-embedded-server