embed-server --server-config=standalone.xml

# Activate trace, if needed
#---------------------------
#/subsystem=logging/logger=org.jboss.security/:add(level=TRACE,use-parent-handlers=true)
#/subsystem=logging/logger=javax.security/:add(level=TRACE,use-parent-handlers=true)


#/subsystem=logging/logger=org.hibernate.SQL/:add(level=DEBUG,use-parent-handlers=true)
#/subsystem=logging/logger=org.hibernate.type.descriptor.sql/:add(level=TRACE,use-parent-handlers=true)

#/subsystem=logging/logger=org.kie/:add(level=TRACE,use-parent-handlers=true)
#/subsystem=logging/logger=org.wildfly.security/:add(level=TRACE,use-parent-handlers=true)
#/subsystem=logging/logger=org.wildfly.elytron/:add(level=TRACE,use-parent-handlers=true)
#/subsystem=logging/logger=org.wildfly.extension.undertow/:add(level=TRACE,use-parent-handlers=true)

/subsystem=logging/logger=org.jbpm.services.task/:add(level=TRACE,use-parent-handlers=true)
/subsystem=logging/logger=org.uberfire/:add(level=WARNING,use-parent-handlers=true)
/subsystem=logging/console-handler=CONSOLE:write-attribute(name=level, value=TRACE)


# Adding postgresql driver as a core module
module add --name=com.postgresql --resources=/etc/drivers/postgresql.jar --dependencies=javax.api,javax.transaction.api

/subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=com.postgresql,\
driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)

xa-data-source add --name=rhpamXADS --jndi-name=java:/rhpamXADS --driver-name=postgresql --user-name=rhpamuser \
--password=rhpampassword --validate-on-match=true --background-validation=false \
--valid-connection-checker-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker \
--exception-sorter-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter \
--xa-datasource-properties={"ServerName"=>"postgresql11","PortNumber"=>"5432","DatabaseName"=>"rhpamdatabase"}

#Configure postgresql as kieserver persistence
/system-property=org.kie.server.persistence.ds:remove
/system-property=org.kie.server.persistence.ds:add(value=java:/rhpamXADS)
/system-property=org.kie.server.persistence.dialect:add(value=org.hibernate.dialect.PostgreSQLDialect)
   

if (outcome != success) of /system-property=org.kie.demo:read-resource
	/system-property=org.kie.server.id:add(value="${org.kie.demo:true}")
else
    /system-property=org.kie.demo:write-attribute(name=value,value="${org.kie.demo:true}")
end-if

if (outcome != success) of /system-property=org.kie.example:read-resource
	/system-property=org.kie.example:add(value="${org.kie.example:true}")
else
    /system-property=org.kie.example:write-attribute(name=value,value="${org.kie.example:true}")
end-if

if (outcome != success) of /system-property=org.jbpm.designer.perspective:read-resource
	/system-property=org.jbpm.designer.perspective:add(value="${org.jbpm.designer.perspective:full}")
else
    /system-property=org.jbpm.designer.perspective:write-attribute(name=value,value="${org.jbpm.designer.perspective:full}")
end-if

if (outcome != success) of /system-property=designerdataobjects:read-resource
	/system-property=designerdataobjects:add(value="${designerdataobjects:false}")
else
    /system-property=designerdataobjects:write-attribute(name=value,value="${designerdataobjects:false}")
end-if

if (outcome != success) of /system-property=org.uberfire.nio.git.ssh.host:read-resource
	/system-property=org.uberfire.nio.git.ssh.host:add(value="0.0.0.0")
else
    /system-property=org.uberfire.nio.git.ssh.host:write-attribute(name=value,value="0.0.0.0")
end-if

if (outcome != success) of /system-property=appformer.experimental.features:read-resource
	/system-property=appformer.experimental.features:add(value="true")
else
    /system-property=appformer.experimental.features:write-attribute(name=value,value="true")
end-if

# Make GIT repositories root directory at /opt/jboss/wildfly/mygit.
# if (outcome != success) of /system-property=org.uberfire.nio.git.dir:read-resource
# 	/system-property=org.uberfire.nio.git.dir:add(value="/opt/jboss/wildfly/mygit")
# else
#     /system-property=org.uberfire.nio.git.dir:write-attribute(name=value,value="/opt/jboss/wildfly/mygit")
# end-if


/subsystem=elytron/dir-context=kieLdapDC:add(url="ldap://ldap-alias:389",principal="cn=admin,dc=jbpm,dc=org",credential-reference={clear-text="admin"})

/subsystem=elytron/ldap-realm=kieLdapRealm:add(dir-context=kieLdapDC,identity-mapping={search-base-dn="ou=People,dc=jbpm,dc=org",rdn-identifier="uid",user-password-mapper={from="userPassword"},attribute-mapping=[{filter-base-dn="ou=Roles,dc=jbpm,dc=org",filter="(uniqueMember=uid={0},ou=People,dc=jbpm,dc=org)",from="cn",to="role"}]})


/subsystem=elytron/security-domain=ApplicationDomain:list-add(name=realms, index=0, value={realm=kieLdapRealm, role-decoder=from-roles-attribute})
/subsystem=elytron/security-domain=ApplicationDomain:write-attribute(name=default-realm, value=kieLdapRealm)

/subsystem=microprofile-opentracing-smallrye/jaeger-tracer=jaeger:write-attribute(name=sampler-param, value=0)


stop-embedded-server